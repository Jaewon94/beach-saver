# ===================================================================
# [실무 요약]
# 이 파일이 테스트 환경에서만 적용되는 이유는 Gradle과 Spring Boot의 시스템적 약속 때문임.
#
# 1. Gradle은 'bootRun' 시 src/main/resources만, 'test'나 'build' 시 src/test/resources도 클래스패스에 포함함.
# 2. Spring Boot는 src/test/resources의 application.properties를 src/main/resources보다 우선 적용함.
#
# 즉, 테스트 실행 시 이 파일이 최우선으로 적용되고,
# 실제 서비스 실행(bootRun) 시에는 무시됨.
# (코드 수정 없이 환경별 설정 완벽 분리 가능)
# ===================================================================

# ===================================================================
# Spring Boot Test Environment Configuration
#
# 이 설정은 'beachsaver_test'라는 테스트 전용 DB를 사용합니다.
# 개발용 DB('beachsaver_dev')와 완전히 분리되어 서로 영향을 주지 않습니다.
# ===================================================================

## =================================
## 서버 설정 (For Test)
## =================================
# 테스트 시 서버 포트를 0으로 설정합니다.
# 이렇게 하면 Spring Boot가 사용 가능한 포트 중 하나를 무작위로 선택하여 사용하므로,
# 다른 프로세스와의 포트 충돌을 방지할 수 있습니다.
server.port=0

## =================================
## 데이터베이스 설정 (For Test)
## =================================

# 테스트 시 사용할 DB의 URL입니다. 데이터베이스 이름을 'beachsaver_test'로 명확히 지정합니다.
spring.datasource.url=jdbc:mysql://localhost:3306/beachsaver_test?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

# 테스트 DB 사용자 이름
spring.datasource.username=beachsaver_developer

# 테스트 DB 비밀번호
spring.datasource.password=beachsaver_developer

# JDBC 드라이버 클래스
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


## =================================
## JPA/Hibernate 설정 (For Test)
## =================================

# 테스트가 실행될 때마다 'beachsaver_test' DB의 모든 테이블을 삭제하고 새로 생성합니다.
# 이를 통해 매번 깨끗한 상태에서 테스트가 시작됩니다.
spring.jpa.hibernate.ddl-auto=create

# 테스트 실행 중 발생하는 SQL 쿼리를 콘솔 로그로 보고 싶을 때 사용합니다.
# 테스트가 예상대로 동작하는지 SQL 레벨에서 디버깅할 때 유용합니다. (true/false)
spring.jpa.show-sql=true


## =================================
## Flyway 설정 (For Test)
## =================================

# 테스트 환경에서는 ddl-auto가 스키마를 관리하므로, Flyway는 비활성화합니다.
spring.flyway.enabled=false

## =================================
## JWT 설정 (For Test)
## =================================
# 테스트용 JWT 시크릿 키 (실제 키와 달라도 상관없습니다)
jwt.secret=test-secret-key-for-beach-saver-backend-project-12345
# 테스트용 JWT 만료 시간 (예: 1시간, 숫자(밀리초)로 입력해야 합니다)
jwt.expires-in=3600000

spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=DEBUG